// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userdb.proto

package userdb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtoDB struct {
	Users                map[string]*Password `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProtoDB) Reset()         { *m = ProtoDB{} }
func (m *ProtoDB) String() string { return proto.CompactTextString(m) }
func (*ProtoDB) ProtoMessage()    {}
func (*ProtoDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_1492f046cfa19579, []int{0}
}

func (m *ProtoDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoDB.Unmarshal(m, b)
}
func (m *ProtoDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoDB.Marshal(b, m, deterministic)
}
func (m *ProtoDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoDB.Merge(m, src)
}
func (m *ProtoDB) XXX_Size() int {
	return xxx_messageInfo_ProtoDB.Size(m)
}
func (m *ProtoDB) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoDB.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoDB proto.InternalMessageInfo

func (m *ProtoDB) GetUsers() map[string]*Password {
	if m != nil {
		return m.Users
	}
	return nil
}

type Password struct {
	// Types that are valid to be assigned to Scheme:
	//	*Password_Scrypt
	//	*Password_Plain
	Scheme               isPassword_Scheme `protobuf_oneof:"scheme"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Password) Reset()         { *m = Password{} }
func (m *Password) String() string { return proto.CompactTextString(m) }
func (*Password) ProtoMessage()    {}
func (*Password) Descriptor() ([]byte, []int) {
	return fileDescriptor_1492f046cfa19579, []int{1}
}

func (m *Password) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Password.Unmarshal(m, b)
}
func (m *Password) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Password.Marshal(b, m, deterministic)
}
func (m *Password) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Password.Merge(m, src)
}
func (m *Password) XXX_Size() int {
	return xxx_messageInfo_Password.Size(m)
}
func (m *Password) XXX_DiscardUnknown() {
	xxx_messageInfo_Password.DiscardUnknown(m)
}

var xxx_messageInfo_Password proto.InternalMessageInfo

type isPassword_Scheme interface {
	isPassword_Scheme()
}

type Password_Scrypt struct {
	Scrypt *Scrypt `protobuf:"bytes,2,opt,name=scrypt,proto3,oneof"`
}

type Password_Plain struct {
	Plain *Plain `protobuf:"bytes,3,opt,name=plain,proto3,oneof"`
}

func (*Password_Scrypt) isPassword_Scheme() {}

func (*Password_Plain) isPassword_Scheme() {}

func (m *Password) GetScheme() isPassword_Scheme {
	if m != nil {
		return m.Scheme
	}
	return nil
}

func (m *Password) GetScrypt() *Scrypt {
	if x, ok := m.GetScheme().(*Password_Scrypt); ok {
		return x.Scrypt
	}
	return nil
}

func (m *Password) GetPlain() *Plain {
	if x, ok := m.GetScheme().(*Password_Plain); ok {
		return x.Plain
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Password) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Password_Scrypt)(nil),
		(*Password_Plain)(nil),
	}
}

type Scrypt struct {
	LogN                 uint64   `protobuf:"varint,1,opt,name=logN,proto3" json:"logN,omitempty"`
	R                    int32    `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	P                    int32    `protobuf:"varint,3,opt,name=p,proto3" json:"p,omitempty"`
	KeyLen               int32    `protobuf:"varint,4,opt,name=keyLen,proto3" json:"keyLen,omitempty"`
	Salt                 []byte   `protobuf:"bytes,5,opt,name=salt,proto3" json:"salt,omitempty"`
	Encrypted            []byte   `protobuf:"bytes,6,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scrypt) Reset()         { *m = Scrypt{} }
func (m *Scrypt) String() string { return proto.CompactTextString(m) }
func (*Scrypt) ProtoMessage()    {}
func (*Scrypt) Descriptor() ([]byte, []int) {
	return fileDescriptor_1492f046cfa19579, []int{2}
}

func (m *Scrypt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scrypt.Unmarshal(m, b)
}
func (m *Scrypt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scrypt.Marshal(b, m, deterministic)
}
func (m *Scrypt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scrypt.Merge(m, src)
}
func (m *Scrypt) XXX_Size() int {
	return xxx_messageInfo_Scrypt.Size(m)
}
func (m *Scrypt) XXX_DiscardUnknown() {
	xxx_messageInfo_Scrypt.DiscardUnknown(m)
}

var xxx_messageInfo_Scrypt proto.InternalMessageInfo

func (m *Scrypt) GetLogN() uint64 {
	if m != nil {
		return m.LogN
	}
	return 0
}

func (m *Scrypt) GetR() int32 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *Scrypt) GetP() int32 {
	if m != nil {
		return m.P
	}
	return 0
}

func (m *Scrypt) GetKeyLen() int32 {
	if m != nil {
		return m.KeyLen
	}
	return 0
}

func (m *Scrypt) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Scrypt) GetEncrypted() []byte {
	if m != nil {
		return m.Encrypted
	}
	return nil
}

type Plain struct {
	Password             []byte   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plain) Reset()         { *m = Plain{} }
func (m *Plain) String() string { return proto.CompactTextString(m) }
func (*Plain) ProtoMessage()    {}
func (*Plain) Descriptor() ([]byte, []int) {
	return fileDescriptor_1492f046cfa19579, []int{3}
}

func (m *Plain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plain.Unmarshal(m, b)
}
func (m *Plain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plain.Marshal(b, m, deterministic)
}
func (m *Plain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plain.Merge(m, src)
}
func (m *Plain) XXX_Size() int {
	return xxx_messageInfo_Plain.Size(m)
}
func (m *Plain) XXX_DiscardUnknown() {
	xxx_messageInfo_Plain.DiscardUnknown(m)
}

var xxx_messageInfo_Plain proto.InternalMessageInfo

func (m *Plain) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoDB)(nil), "userdb.ProtoDB")
	proto.RegisterMapType((map[string]*Password)(nil), "userdb.ProtoDB.UsersEntry")
	proto.RegisterType((*Password)(nil), "userdb.Password")
	proto.RegisterType((*Scrypt)(nil), "userdb.Scrypt")
	proto.RegisterType((*Plain)(nil), "userdb.Plain")
}

func init() { proto.RegisterFile("userdb.proto", fileDescriptor_1492f046cfa19579) }

var fileDescriptor_1492f046cfa19579 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xbb, 0x6d, 0x77, 0x6d, 0xa7, 0x51, 0xca, 0x1c, 0x64, 0x29, 0x1e, 0x42, 0x44, 0xc9,
	0x29, 0x48, 0xbd, 0x88, 0xc7, 0xa2, 0x50, 0x44, 0x44, 0x56, 0xfc, 0x01, 0xa9, 0x59, 0x54, 0x1a,
	0x93, 0x65, 0x37, 0x55, 0x72, 0xf5, 0xe2, 0xdf, 0x96, 0x9d, 0x6c, 0xd3, 0xdb, 0xbc, 0xef, 0xcd,
	0xbc, 0x99, 0x65, 0x21, 0xda, 0x39, 0x6d, 0x8b, 0x4d, 0x66, 0x6c, 0xdd, 0xd4, 0x28, 0x3a, 0x95,
	0xfc, 0x31, 0x38, 0x7a, 0xf6, 0xe4, 0x6e, 0x85, 0x57, 0xc0, 0x3d, 0x75, 0x92, 0xc5, 0xa3, 0x74,
	0xb6, 0x5c, 0x64, 0x61, 0x22, 0xf8, 0xd9, 0xab, 0x37, 0xef, 0xab, 0xc6, 0xb6, 0xaa, 0x6b, 0x5c,
	0x3c, 0x00, 0x1c, 0x20, 0xce, 0x61, 0xb4, 0xd5, 0xad, 0x64, 0x31, 0x4b, 0xa7, 0xca, 0x97, 0x78,
	0x09, 0xfc, 0x3b, 0x2f, 0x77, 0x5a, 0x0e, 0x63, 0x96, 0xce, 0x96, 0xf3, 0x3e, 0x31, 0x77, 0xee,
	0xa7, 0xb6, 0x85, 0xea, 0xec, 0xdb, 0xe1, 0x0d, 0x4b, 0x34, 0x4c, 0xf6, 0x18, 0x53, 0x10, 0xee,
	0xcd, 0xb6, 0xa6, 0x09, 0x83, 0x27, 0xfb, 0xc1, 0x17, 0xa2, 0xeb, 0x81, 0x0a, 0x3e, 0x5e, 0x00,
	0x37, 0x65, 0xfe, 0x59, 0xc9, 0x11, 0x35, 0x1e, 0xf7, 0x1b, 0x3c, 0x5c, 0x0f, 0x54, 0xe7, 0xae,
	0x26, 0x3e, 0xf0, 0x43, 0x7f, 0xe9, 0xe4, 0x97, 0x81, 0xe8, 0x52, 0x10, 0x61, 0x5c, 0xd6, 0xef,
	0x4f, 0x74, 0xf0, 0x58, 0x51, 0x8d, 0x11, 0x30, 0x4b, 0x4b, 0xb9, 0x62, 0xd6, 0x2b, 0x43, 0xc9,
	0x5c, 0x31, 0x83, 0xa7, 0x20, 0xb6, 0xba, 0x7d, 0xd4, 0x95, 0x1c, 0x13, 0x0a, 0xca, 0xe7, 0xb8,
	0xbc, 0x6c, 0x24, 0x8f, 0x59, 0x1a, 0x29, 0xaa, 0xf1, 0x0c, 0xa6, 0xba, 0xa2, 0x35, 0xba, 0x90,
	0x82, 0x8c, 0x03, 0x48, 0xce, 0x81, 0xd3, 0x81, 0xb8, 0x80, 0x89, 0x09, 0x8f, 0xa6, 0x33, 0x22,
	0xd5, 0xeb, 0x8d, 0xa0, 0x9f, 0xba, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x93, 0xae, 0x19,
	0xb9, 0x01, 0x00, 0x00,
}
